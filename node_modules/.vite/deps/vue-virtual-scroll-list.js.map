{
  "version": 3,
  "sources": ["vite:cjs-external-facade:vue", "../../.pnpm/registry.npmjs.org+vue-virtual-scroll-list@2.3.5/node_modules/vue-virtual-scroll-list/dist/index.js"],
  "sourcesContent": ["import * as m from \"vite-cjs-external-facade:vue\";module.exports = m;", "/*!\n * vue-virtual-scroll-list v2.3.4\n * open source under the MIT license\n * https://github.com/tangbc/vue-virtual-scroll-list#readme\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('vue')) :\n  typeof define === 'function' && define.amd ? define(['vue'], factory) :\n  (global = global || self, global.VirtualList = factory(global.Vue));\n}(this, (function (Vue) { 'use strict';\n\n  Vue = Vue && Object.prototype.hasOwnProperty.call(Vue, 'default') ? Vue['default'] : Vue;\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  /**\n   * virtual list core calculating center\n   */\n\n  var DIRECTION_TYPE = {\n    FRONT: 'FRONT',\n    // scroll up or left\n    BEHIND: 'BEHIND' // scroll down or right\n  };\n\n  var CALC_TYPE = {\n    INIT: 'INIT',\n    FIXED: 'FIXED',\n    DYNAMIC: 'DYNAMIC'\n  };\n  var LEADING_BUFFER = 0;\n  var Virtual = /*#__PURE__*/function () {\n    function Virtual(param, callUpdate) {\n      _classCallCheck(this, Virtual);\n      this.init(param, callUpdate);\n    }\n    _createClass(Virtual, [{\n      key: \"init\",\n      value: function init(param, callUpdate) {\n        // param data\n        this.param = param;\n        this.callUpdate = callUpdate;\n\n        // size data\n        this.sizes = new Map();\n        this.firstRangeTotalSize = 0;\n        this.firstRangeAverageSize = 0;\n        this.fixedSizeValue = 0;\n        this.calcType = CALC_TYPE.INIT;\n\n        // scroll data\n        this.offset = 0;\n        this.direction = '';\n\n        // range data\n        this.range = Object.create(null);\n        if (param) {\n          this.checkRange(0, param.keeps - 1);\n        }\n\n        // benchmark test data\n        // this.__bsearchCalls = 0\n        // this.__getIndexOffsetCalls = 0\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        this.init(null, null);\n      }\n\n      // return current render range\n    }, {\n      key: \"getRange\",\n      value: function getRange() {\n        var range = Object.create(null);\n        range.start = this.range.start;\n        range.end = this.range.end;\n        range.padFront = this.range.padFront;\n        range.padBehind = this.range.padBehind;\n        return range;\n      }\n    }, {\n      key: \"isBehind\",\n      value: function isBehind() {\n        return this.direction === DIRECTION_TYPE.BEHIND;\n      }\n    }, {\n      key: \"isFront\",\n      value: function isFront() {\n        return this.direction === DIRECTION_TYPE.FRONT;\n      }\n\n      // return start index offset\n    }, {\n      key: \"getOffset\",\n      value: function getOffset(start) {\n        return (start < 1 ? 0 : this.getIndexOffset(start)) + this.param.slotHeaderSize;\n      }\n    }, {\n      key: \"updateParam\",\n      value: function updateParam(key, value) {\n        var _this = this;\n        if (this.param && key in this.param) {\n          // if uniqueIds change, find out deleted id and remove from size map\n          if (key === 'uniqueIds') {\n            this.sizes.forEach(function (v, key) {\n              if (!value.includes(key)) {\n                _this.sizes[\"delete\"](key);\n              }\n            });\n          }\n          this.param[key] = value;\n        }\n      }\n\n      // save each size map by id\n    }, {\n      key: \"saveSize\",\n      value: function saveSize(id, size) {\n        this.sizes.set(id, size);\n\n        // we assume size type is fixed at the beginning and remember first size value\n        // if there is no size value different from this at next comming saving\n        // we think it's a fixed size list, otherwise is dynamic size list\n        if (this.calcType === CALC_TYPE.INIT) {\n          this.fixedSizeValue = size;\n          this.calcType = CALC_TYPE.FIXED;\n        } else if (this.calcType === CALC_TYPE.FIXED && this.fixedSizeValue !== size) {\n          this.calcType = CALC_TYPE.DYNAMIC;\n          // it's no use at all\n          delete this.fixedSizeValue;\n        }\n\n        // calculate the average size only in the first range\n        if (this.calcType !== CALC_TYPE.FIXED && typeof this.firstRangeTotalSize !== 'undefined') {\n          if (this.sizes.size < Math.min(this.param.keeps, this.param.uniqueIds.length)) {\n            this.firstRangeTotalSize = _toConsumableArray(this.sizes.values()).reduce(function (acc, val) {\n              return acc + val;\n            }, 0);\n            this.firstRangeAverageSize = Math.round(this.firstRangeTotalSize / this.sizes.size);\n          } else {\n            // it's done using\n            delete this.firstRangeTotalSize;\n          }\n        }\n      }\n\n      // in some special situation (e.g. length change) we need to update in a row\n      // try goiong to render next range by a leading buffer according to current direction\n    }, {\n      key: \"handleDataSourcesChange\",\n      value: function handleDataSourcesChange() {\n        var start = this.range.start;\n        if (this.isFront()) {\n          start = start - LEADING_BUFFER;\n        } else if (this.isBehind()) {\n          start = start + LEADING_BUFFER;\n        }\n        start = Math.max(start, 0);\n        this.updateRange(this.range.start, this.getEndByStart(start));\n      }\n\n      // when slot size change, we also need force update\n    }, {\n      key: \"handleSlotSizeChange\",\n      value: function handleSlotSizeChange() {\n        this.handleDataSourcesChange();\n      }\n\n      // calculating range on scroll\n    }, {\n      key: \"handleScroll\",\n      value: function handleScroll(offset) {\n        this.direction = offset < this.offset || offset === 0 ? DIRECTION_TYPE.FRONT : DIRECTION_TYPE.BEHIND;\n        this.offset = offset;\n        if (!this.param) {\n          return;\n        }\n        if (this.direction === DIRECTION_TYPE.FRONT) {\n          this.handleFront();\n        } else if (this.direction === DIRECTION_TYPE.BEHIND) {\n          this.handleBehind();\n        }\n      }\n\n      // ----------- public method end -----------\n    }, {\n      key: \"handleFront\",\n      value: function handleFront() {\n        var overs = this.getScrollOvers();\n        // should not change range if start doesn't exceed overs\n        if (overs > this.range.start) {\n          return;\n        }\n\n        // move up start by a buffer length, and make sure its safety\n        var start = Math.max(overs - this.param.buffer, 0);\n        this.checkRange(start, this.getEndByStart(start));\n      }\n    }, {\n      key: \"handleBehind\",\n      value: function handleBehind() {\n        var overs = this.getScrollOvers();\n        // range should not change if scroll overs within buffer\n        if (overs < this.range.start + this.param.buffer) {\n          return;\n        }\n        this.checkRange(overs, this.getEndByStart(overs));\n      }\n\n      // return the pass overs according to current scroll offset\n    }, {\n      key: \"getScrollOvers\",\n      value: function getScrollOvers() {\n        // if slot header exist, we need subtract its size\n        var offset = this.offset - this.param.slotHeaderSize;\n        if (offset <= 0) {\n          return 0;\n        }\n\n        // if is fixed type, that can be easily\n        if (this.isFixedType()) {\n          return Math.floor(offset / this.fixedSizeValue);\n        }\n        var low = 0;\n        var middle = 0;\n        var middleOffset = 0;\n        var high = this.param.uniqueIds.length;\n        while (low <= high) {\n          // this.__bsearchCalls++\n          middle = low + Math.floor((high - low) / 2);\n          middleOffset = this.getIndexOffset(middle);\n          if (middleOffset === offset) {\n            return middle;\n          } else if (middleOffset < offset) {\n            low = middle + 1;\n          } else if (middleOffset > offset) {\n            high = middle - 1;\n          }\n        }\n        return low > 0 ? --low : 0;\n      }\n\n      // return a scroll offset from given index, can efficiency be improved more here?\n      // although the call frequency is very high, its only a superposition of numbers\n    }, {\n      key: \"getIndexOffset\",\n      value: function getIndexOffset(givenIndex) {\n        if (!givenIndex) {\n          return 0;\n        }\n        var offset = 0;\n        var indexSize = 0;\n        for (var index = 0; index < givenIndex; index++) {\n          // this.__getIndexOffsetCalls++\n          indexSize = this.sizes.get(this.param.uniqueIds[index]);\n          offset = offset + (typeof indexSize === 'number' ? indexSize : this.getEstimateSize());\n        }\n        return offset;\n      }\n\n      // is fixed size type\n    }, {\n      key: \"isFixedType\",\n      value: function isFixedType() {\n        return this.calcType === CALC_TYPE.FIXED;\n      }\n\n      // return the real last index\n    }, {\n      key: \"getLastIndex\",\n      value: function getLastIndex() {\n        return this.param.uniqueIds.length - 1;\n      }\n\n      // in some conditions range is broke, we need correct it\n      // and then decide whether need update to next range\n    }, {\n      key: \"checkRange\",\n      value: function checkRange(start, end) {\n        var keeps = this.param.keeps;\n        var total = this.param.uniqueIds.length;\n\n        // datas less than keeps, render all\n        if (total <= keeps) {\n          start = 0;\n          end = this.getLastIndex();\n        } else if (end - start < keeps - 1) {\n          // if range length is less than keeps, corrent it base on end\n          start = end - keeps + 1;\n        }\n        if (this.range.start !== start) {\n          this.updateRange(start, end);\n        }\n      }\n\n      // setting to a new range and rerender\n    }, {\n      key: \"updateRange\",\n      value: function updateRange(start, end) {\n        this.range.start = start;\n        this.range.end = end;\n        this.range.padFront = this.getPadFront();\n        this.range.padBehind = this.getPadBehind();\n        this.callUpdate(this.getRange());\n      }\n\n      // return end base on start\n    }, {\n      key: \"getEndByStart\",\n      value: function getEndByStart(start) {\n        var theoryEnd = start + this.param.keeps - 1;\n        var truelyEnd = Math.min(theoryEnd, this.getLastIndex());\n        return truelyEnd;\n      }\n\n      // return total front offset\n    }, {\n      key: \"getPadFront\",\n      value: function getPadFront() {\n        if (this.isFixedType()) {\n          return this.fixedSizeValue * this.range.start;\n        } else {\n          return this.getIndexOffset(this.range.start);\n        }\n      }\n\n      // return total behind offset\n    }, {\n      key: \"getPadBehind\",\n      value: function getPadBehind() {\n        var end = this.range.end;\n        var lastIndex = this.getLastIndex();\n        if (this.isFixedType()) {\n          return (lastIndex - end) * this.fixedSizeValue;\n        }\n        return (lastIndex - end) * this.getEstimateSize();\n      }\n\n      // get the item estimate size\n    }, {\n      key: \"getEstimateSize\",\n      value: function getEstimateSize() {\n        return this.isFixedType() ? this.fixedSizeValue : this.firstRangeAverageSize || this.param.estimateSize;\n      }\n    }]);\n    return Virtual;\n  }();\n\n  /**\n   * props declaration for default, item and slot component\n   */\n\n  var VirtualProps = {\n    dataKey: {\n      type: [String, Function],\n      required: true\n    },\n    dataSources: {\n      type: Array,\n      required: true\n    },\n    dataComponent: {\n      type: [Object, Function],\n      required: true\n    },\n    keeps: {\n      type: Number,\n      \"default\": 30\n    },\n    extraProps: {\n      type: Object\n    },\n    estimateSize: {\n      type: Number,\n      \"default\": 50\n    },\n    direction: {\n      type: String,\n      \"default\": 'vertical' // the other value is horizontal\n    },\n\n    start: {\n      type: Number,\n      \"default\": 0\n    },\n    offset: {\n      type: Number,\n      \"default\": 0\n    },\n    topThreshold: {\n      type: Number,\n      \"default\": 0\n    },\n    bottomThreshold: {\n      type: Number,\n      \"default\": 0\n    },\n    pageMode: {\n      type: Boolean,\n      \"default\": false\n    },\n    rootTag: {\n      type: String,\n      \"default\": 'div'\n    },\n    wrapTag: {\n      type: String,\n      \"default\": 'div'\n    },\n    wrapClass: {\n      type: String,\n      \"default\": ''\n    },\n    wrapStyle: {\n      type: Object\n    },\n    itemTag: {\n      type: String,\n      \"default\": 'div'\n    },\n    itemClass: {\n      type: String,\n      \"default\": ''\n    },\n    itemClassAdd: {\n      type: Function\n    },\n    itemStyle: {\n      type: Object\n    },\n    headerTag: {\n      type: String,\n      \"default\": 'div'\n    },\n    headerClass: {\n      type: String,\n      \"default\": ''\n    },\n    headerStyle: {\n      type: Object\n    },\n    footerTag: {\n      type: String,\n      \"default\": 'div'\n    },\n    footerClass: {\n      type: String,\n      \"default\": ''\n    },\n    footerStyle: {\n      type: Object\n    },\n    itemScopedSlots: {\n      type: Object\n    }\n  };\n  var ItemProps = {\n    index: {\n      type: Number\n    },\n    event: {\n      type: String\n    },\n    tag: {\n      type: String\n    },\n    horizontal: {\n      type: Boolean\n    },\n    source: {\n      type: Object\n    },\n    component: {\n      type: [Object, Function]\n    },\n    slotComponent: {\n      type: Function\n    },\n    uniqueKey: {\n      type: [String, Number]\n    },\n    extraProps: {\n      type: Object\n    },\n    scopedSlots: {\n      type: Object\n    }\n  };\n  var SlotProps = {\n    event: {\n      type: String\n    },\n    uniqueKey: {\n      type: String\n    },\n    tag: {\n      type: String\n    },\n    horizontal: {\n      type: Boolean\n    }\n  };\n\n  var Wrapper = {\n    created: function created() {\n      this.shapeKey = this.horizontal ? 'offsetWidth' : 'offsetHeight';\n    },\n    mounted: function mounted() {\n      var _this = this;\n      if (typeof ResizeObserver !== 'undefined') {\n        this.resizeObserver = new ResizeObserver(function () {\n          _this.dispatchSizeChange();\n        });\n        this.resizeObserver.observe(this.$el);\n      }\n    },\n    // since componet will be reused, so disptach when updated\n    updated: function updated() {\n      // this.dispatchSizeChange()\n      this.resizeObserver.observe(this.$el);\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    },\n    methods: {\n      getCurrentSize: function getCurrentSize() {\n        return this.$el ? this.$el[this.shapeKey] : 0;\n      },\n      // tell parent current size identify by unqiue key\n      dispatchSizeChange: function dispatchSizeChange() {\n        this.$parent.$emit(this.event, this.uniqueKey, this.getCurrentSize(), this.hasInitial);\n      }\n    }\n  };\n\n  // wrapping for item\n  var Item = Vue.component('virtual-list-item', {\n    mixins: [Wrapper],\n    props: ItemProps,\n    render: function render(h) {\n      var tag = this.tag,\n        component = this.component,\n        _this$extraProps = this.extraProps,\n        extraProps = _this$extraProps === void 0 ? {} : _this$extraProps,\n        index = this.index,\n        source = this.source,\n        _this$scopedSlots = this.scopedSlots,\n        scopedSlots = _this$scopedSlots === void 0 ? {} : _this$scopedSlots,\n        uniqueKey = this.uniqueKey,\n        slotComponent = this.slotComponent;\n      var props = _objectSpread2(_objectSpread2({}, extraProps), {}, {\n        source: source,\n        index: index\n      });\n      return h(tag, {\n        key: uniqueKey,\n        attrs: {\n          role: 'listitem'\n        }\n      }, [slotComponent ? slotComponent({\n        item: source,\n        index: index,\n        scope: props\n      }) : h(component, {\n        props: props,\n        scopedSlots: scopedSlots\n      })]);\n    }\n  });\n\n  // wrapping for slot\n  var Slot = Vue.component('virtual-list-slot', {\n    mixins: [Wrapper],\n    props: SlotProps,\n    render: function render(h) {\n      var tag = this.tag,\n        uniqueKey = this.uniqueKey;\n      return h(tag, {\n        key: uniqueKey,\n        attrs: {\n          role: uniqueKey\n        }\n      }, this.$slots[\"default\"]);\n    }\n  });\n\n  /**\n   * virtual list default component\n   */\n  var EVENT_TYPE = {\n    ITEM: 'item_resize',\n    SLOT: 'slot_resize'\n  };\n  var SLOT_TYPE = {\n    HEADER: 'thead',\n    // string value also use for aria role attribute\n    FOOTER: 'tfoot'\n  };\n  var VirtualList = Vue.component('virtual-list', {\n    props: VirtualProps,\n    data: function data() {\n      return {\n        range: null\n      };\n    },\n    watch: {\n      'dataSources.length': function dataSourcesLength() {\n        this.virtual.updateParam('uniqueIds', this.getUniqueIdFromDataSources());\n        this.virtual.handleDataSourcesChange();\n      },\n      keeps: function keeps(newValue) {\n        this.virtual.updateParam('keeps', newValue);\n        this.virtual.handleSlotSizeChange();\n      },\n      start: function start(newValue) {\n        this.scrollToIndex(newValue);\n      },\n      offset: function offset(newValue) {\n        this.scrollToOffset(newValue);\n      }\n    },\n    created: function created() {\n      this.isHorizontal = this.direction === 'horizontal';\n      this.directionKey = this.isHorizontal ? 'scrollLeft' : 'scrollTop';\n      this.installVirtual();\n\n      // listen item size change\n      this.$on(EVENT_TYPE.ITEM, this.onItemResized);\n\n      // listen slot size change\n      if (this.$slots.header || this.$slots.footer) {\n        this.$on(EVENT_TYPE.SLOT, this.onSlotResized);\n      }\n    },\n    activated: function activated() {\n      // set back offset when awake from keep-alive\n      this.scrollToOffset(this.virtual.offset);\n      if (this.pageMode) {\n        document.addEventListener('scroll', this.onScroll, {\n          passive: false\n        });\n      }\n    },\n    deactivated: function deactivated() {\n      if (this.pageMode) {\n        document.removeEventListener('scroll', this.onScroll);\n      }\n    },\n    mounted: function mounted() {\n      // set position\n      if (this.start) {\n        this.scrollToIndex(this.start);\n      } else if (this.offset) {\n        this.scrollToOffset(this.offset);\n      }\n\n      // in page mode we bind scroll event to document\n      if (this.pageMode) {\n        this.updatePageModeFront();\n        document.addEventListener('scroll', this.onScroll, {\n          passive: false\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.virtual.destroy();\n      if (this.pageMode) {\n        document.removeEventListener('scroll', this.onScroll);\n      }\n    },\n    methods: {\n      // get item size by id\n      getSize: function getSize(id) {\n        return this.virtual.sizes.get(id);\n      },\n      // get the total number of stored (rendered) items\n      getSizes: function getSizes() {\n        return this.virtual.sizes.size;\n      },\n      // return current scroll offset\n      getOffset: function getOffset() {\n        if (this.pageMode) {\n          return document.documentElement[this.directionKey] || document.body[this.directionKey];\n        } else {\n          var root = this.$refs.root;\n          return root ? Math.ceil(root[this.directionKey]) : 0;\n        }\n      },\n      // return client viewport size\n      getClientSize: function getClientSize() {\n        var key = this.isHorizontal ? 'clientWidth' : 'clientHeight';\n        if (this.pageMode) {\n          return document.documentElement[key] || document.body[key];\n        } else {\n          var root = this.$refs.root;\n          return root ? Math.ceil(root[key]) : 0;\n        }\n      },\n      // return all scroll size\n      getScrollSize: function getScrollSize() {\n        var key = this.isHorizontal ? 'scrollWidth' : 'scrollHeight';\n        if (this.pageMode) {\n          return document.documentElement[key] || document.body[key];\n        } else {\n          var root = this.$refs.root;\n          return root ? Math.ceil(root[key]) : 0;\n        }\n      },\n      // set current scroll position to a expectant offset\n      scrollToOffset: function scrollToOffset(offset) {\n        if (this.pageMode) {\n          document.body[this.directionKey] = offset;\n          document.documentElement[this.directionKey] = offset;\n        } else {\n          var root = this.$refs.root;\n          if (root) {\n            root[this.directionKey] = offset;\n          }\n        }\n      },\n      // set current scroll position to a expectant index\n      scrollToIndex: function scrollToIndex(index) {\n        // scroll to bottom\n        if (index >= this.dataSources.length - 1) {\n          this.scrollToBottom();\n        } else {\n          var offset = this.virtual.getOffset(index);\n          this.scrollToOffset(offset);\n        }\n      },\n      // set current scroll position to bottom\n      scrollToBottom: function scrollToBottom() {\n        var _this = this;\n        var shepherd = this.$refs.shepherd;\n        if (shepherd) {\n          var offset = shepherd[this.isHorizontal ? 'offsetLeft' : 'offsetTop'];\n          this.scrollToOffset(offset);\n\n          // check if it's really scrolled to the bottom\n          // maybe list doesn't render and calculate to last range\n          // so we need retry in next event loop until it really at bottom\n          setTimeout(function () {\n            if (_this.getOffset() + _this.getClientSize() + 1 < _this.getScrollSize()) {\n              _this.scrollToBottom();\n            }\n          }, 3);\n        }\n      },\n      // when using page mode we need update slot header size manually\n      // taking root offset relative to the browser as slot header size\n      updatePageModeFront: function updatePageModeFront() {\n        var root = this.$refs.root;\n        if (root) {\n          var rect = root.getBoundingClientRect();\n          var defaultView = root.ownerDocument.defaultView;\n          var offsetFront = this.isHorizontal ? rect.left + defaultView.pageXOffset : rect.top + defaultView.pageYOffset;\n          this.virtual.updateParam('slotHeaderSize', offsetFront);\n        }\n      },\n      // reset all state back to initial\n      reset: function reset() {\n        this.virtual.destroy();\n        this.scrollToOffset(0);\n        this.installVirtual();\n      },\n      // ----------- public method end -----------\n      installVirtual: function installVirtual() {\n        this.virtual = new Virtual({\n          slotHeaderSize: 0,\n          slotFooterSize: 0,\n          keeps: this.keeps,\n          estimateSize: this.estimateSize,\n          buffer: Math.round(this.keeps / 3),\n          // recommend for a third of keeps\n          uniqueIds: this.getUniqueIdFromDataSources()\n        }, this.onRangeChanged);\n\n        // sync initial range\n        this.range = this.virtual.getRange();\n      },\n      getUniqueIdFromDataSources: function getUniqueIdFromDataSources() {\n        var dataKey = this.dataKey;\n        return this.dataSources.map(function (dataSource) {\n          return typeof dataKey === 'function' ? dataKey(dataSource) : dataSource[dataKey];\n        });\n      },\n      // event called when each item mounted or size changed\n      onItemResized: function onItemResized(id, size) {\n        this.virtual.saveSize(id, size);\n        this.$emit('resized', id, size);\n      },\n      // event called when slot mounted or size changed\n      onSlotResized: function onSlotResized(type, size, hasInit) {\n        if (type === SLOT_TYPE.HEADER) {\n          this.virtual.updateParam('slotHeaderSize', size);\n        } else if (type === SLOT_TYPE.FOOTER) {\n          this.virtual.updateParam('slotFooterSize', size);\n        }\n        if (hasInit) {\n          this.virtual.handleSlotSizeChange();\n        }\n      },\n      // here is the rerendering entry\n      onRangeChanged: function onRangeChanged(range) {\n        this.range = range;\n      },\n      onScroll: function onScroll(evt) {\n        var offset = this.getOffset();\n        var clientSize = this.getClientSize();\n        var scrollSize = this.getScrollSize();\n\n        // \biOS scroll-spring-back behavior will make direction mistake\n        if (offset < 0 || offset + clientSize > scrollSize + 1 || !scrollSize) {\n          return;\n        }\n        this.virtual.handleScroll(offset);\n        this.emitEvent(offset, clientSize, scrollSize, evt);\n      },\n      // emit event in special position\n      emitEvent: function emitEvent(offset, clientSize, scrollSize, evt) {\n        this.$emit('scroll', evt, this.virtual.getRange());\n        if (this.virtual.isFront() && !!this.dataSources.length && offset - this.topThreshold <= 0) {\n          this.$emit('totop');\n        } else if (this.virtual.isBehind() && offset + clientSize + this.bottomThreshold >= scrollSize) {\n          this.$emit('tobottom');\n        }\n      },\n      // get the real render slots based on range data\n      // in-place patch strategy will try to reuse components as possible\n      // so those components that are reused will not trigger lifecycle mounted\n      getRenderSlots: function getRenderSlots(h) {\n        var slots = [];\n        var _this$range = this.range,\n          start = _this$range.start,\n          end = _this$range.end;\n        var dataSources = this.dataSources,\n          dataKey = this.dataKey,\n          itemClass = this.itemClass,\n          itemTag = this.itemTag,\n          itemStyle = this.itemStyle,\n          isHorizontal = this.isHorizontal,\n          extraProps = this.extraProps,\n          dataComponent = this.dataComponent,\n          itemScopedSlots = this.itemScopedSlots;\n        var slotComponent = this.$scopedSlots && this.$scopedSlots.item;\n        for (var index = start; index <= end; index++) {\n          var dataSource = dataSources[index];\n          if (dataSource) {\n            var uniqueKey = typeof dataKey === 'function' ? dataKey(dataSource) : dataSource[dataKey];\n            if (typeof uniqueKey === 'string' || typeof uniqueKey === 'number') {\n              slots.push(h(Item, {\n                props: {\n                  index: index,\n                  tag: itemTag,\n                  event: EVENT_TYPE.ITEM,\n                  horizontal: isHorizontal,\n                  uniqueKey: uniqueKey,\n                  source: dataSource,\n                  extraProps: extraProps,\n                  component: dataComponent,\n                  slotComponent: slotComponent,\n                  scopedSlots: itemScopedSlots\n                },\n                style: itemStyle,\n                \"class\": \"\".concat(itemClass).concat(this.itemClassAdd ? ' ' + this.itemClassAdd(index) : '')\n              }));\n            } else {\n              console.warn(\"Cannot get the data-key '\".concat(dataKey, \"' from data-sources.\"));\n            }\n          } else {\n            console.warn(\"Cannot get the index '\".concat(index, \"' from data-sources.\"));\n          }\n        }\n        return slots;\n      }\n    },\n    // render function, a closer-to-the-compiler alternative to templates\n    // https://vuejs.org/v2/guide/render-function.html#The-Data-Object-In-Depth\n    render: function render(h) {\n      var _this$$slots = this.$slots,\n        header = _this$$slots.header,\n        footer = _this$$slots.footer;\n      var _this$range2 = this.range,\n        padFront = _this$range2.padFront,\n        padBehind = _this$range2.padBehind;\n      var isHorizontal = this.isHorizontal,\n        pageMode = this.pageMode,\n        rootTag = this.rootTag,\n        wrapTag = this.wrapTag,\n        wrapClass = this.wrapClass,\n        wrapStyle = this.wrapStyle,\n        headerTag = this.headerTag,\n        headerClass = this.headerClass,\n        headerStyle = this.headerStyle,\n        footerTag = this.footerTag,\n        footerClass = this.footerClass,\n        footerStyle = this.footerStyle;\n      var paddingStyle = {\n        padding: isHorizontal ? \"0px \".concat(padBehind, \"px 0px \").concat(padFront, \"px\") : \"\".concat(padFront, \"px 0px \").concat(padBehind, \"px\")\n      };\n      var wrapperStyle = wrapStyle ? Object.assign({}, wrapStyle, paddingStyle) : paddingStyle;\n      return h(rootTag, {\n        ref: 'root',\n        on: {\n          '&scroll': !pageMode && this.onScroll\n        }\n      }, [\n      // header slot\n      header ? h(Slot, {\n        \"class\": headerClass,\n        style: headerStyle,\n        props: {\n          tag: headerTag,\n          event: EVENT_TYPE.SLOT,\n          uniqueKey: SLOT_TYPE.HEADER\n        }\n      }, header) : null,\n      // main list\n      h(wrapTag, {\n        \"class\": wrapClass,\n        attrs: {\n          role: 'group'\n        },\n        style: wrapperStyle\n      }, this.getRenderSlots(h)),\n      // footer slot\n      footer ? h(Slot, {\n        \"class\": footerClass,\n        style: footerStyle,\n        props: {\n          tag: footerTag,\n          event: EVENT_TYPE.SLOT,\n          uniqueKey: SLOT_TYPE.FOOTER\n        }\n      }, footer) : null,\n      // an empty element use to scroll to bottom\n      h('div', {\n        ref: 'shepherd',\n        style: {\n          width: isHorizontal ? '0px' : '100%',\n          height: isHorizontal ? '100%' : '0px'\n        }\n      })]);\n    }\n  });\n\n  return VirtualList;\n\n})));\n"],
  "mappings": "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",
  "names": ["Virtual", "key"]
}
